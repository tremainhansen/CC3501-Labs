/* ###################################################################
**     Filename    : main.c
**     Project     : Lab_1
**     Processor   : MK20DN128VLH5
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2018-07-25, 21:43, # CodeGen: 0
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file main.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup main_module main module documentation
**  @{
*/         
/* MODULE main */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "RED_PWM1.h"
#include "PwmLdd1.h"
#include "GREEN_PWM.h"
#include "PwmLdd2.h"
#include "BLUE_PWM.h"
#include "PwmLdd3.h"
#include "TU1.h"
#include "Bit1.h"
#include "BitIoLdd1.h"
#include "Term1.h"
#include "Inhr1.h"
#include "ASerialLdd2.h"
#include "AD1.h"
#include "AdcLdd1.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* User includes (#include below this line is not maintained by Processor Expert) */
#include <stddef.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>


/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
  /* Write your local variable definition here */
	long map(long x, long in_min, long in_max, long out_min, long out_max)
	{
	  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
	}
	volatile byte input;
	volatile bool flag = 0;
  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  AD1_Calibrate(true);
   Term1_Cls();
   byte light;
   PORTA_PCR2 = 0;
   int high;
   int low;
   bool flag1;
   float grad;
   int y;


   for(;;)
   {
 	  if (flag1 == 0)
 	  {
 	  Term1_SendStr("Calibrate");
 	  Term1_SendStr("\r\n");
 	  Term1_SendStr("show to full light for 5 seconds");
 	  Term1_SendStr("\r\n");
 	  Term1_SendStr("hit space bar to continue");
 	  AD1_Measure(true);
 	  AD1_GetValue8(&light);
 	  high = light;

 	  while (flag == 0)
 	  {
 		  AD1_Measure(true);
 		  AD1_GetValue8(&light);
 		  if(light < high)
 		  {
 			  high = light;
 		  }
 	  }

 	  flag = 0;
 	  input = 1;

 	  Term1_SendStr("\r\n");
 	  Term1_SendStr("cover for 5 seconds");
 	  Term1_SendStr("\r\n");
 	  Term1_SendStr("hit space bar to continue");
 	  Term1_SendStr("\r\n");
  	  AD1_Measure(true);
 	  AD1_GetValue8(&light);
 	  low = light;

 	  while (flag == 0)
 	  	  {
 	 	  AD1_Measure(true);
 		  AD1_GetValue8(&light);
 		   if(light > low)
 		   {
 			  low = light;
 		   }
 	  }

 	  Term1_SendStr("Calibration done");
 	  flag1 = 1;

 	  grad= (255)/((float)high - (float)low);
 	  y = grad*(((int)light) - high) + 255;

 	  }
 	  grad= (255)/((float)high - (float)low);
 	  y = grad*(((int)light) - high) + 255;

 	  AD1_Measure(true);
 	  AD1_GetValue8(&light);
 //	  Term1_SendNum(light);
 //	  Term1_SendStr("\r\n");
 //	  // for(int i = 0; i<80000;i++);
 //
 //	  // int y = map((int)light,30,260,0,255);
 //	  int y = (12750/47) - ((51*(int)light)/(47));

 	  RED_PWM1_SetRatio8(y);

   }

  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
   } /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END main */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
